name: Generate DocC

on:
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  GH_USER: cryptoAlgorithm
  BUILD_TARGET: DiscordKitBot

jobs:
  generate:
    runs-on: macos-13
    env:
      BUILD_DIR: _docs/

    steps:
      - uses: actions/checkout@v3

      # - uses: webfactory/ssh-agent@v0.5.4
      #   with:
      #     ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      # - name: Init submodules
      #   env:
      #     TOKEN: ${{ secrets.GH_TOKEN }}
      #     USER: ${{ env.GH_USER }}
      #   run: |
      #     git config --system credential.helper store
      #     echo "https://$USER:$TOKEN@github.com" > ~/.git-credentials
      #     git submodule update --init

      ##########################
      ## Select Xcode
      ##########################
      - name: Select Xcode 14.3.1
        run: sudo xcode-select -s /Applications/Xcode_14.3.1.app

      ##########################
      ## Cache
      ##########################
      - name: Cache Swift Build
        uses: actions/cache@v3
        with:
          path: .build
          key: swift-build-cache

      ##########################
      ## Generate Docs
      ##########################
      - name: Generate DocC
        run: mkdir -p ${{ env.BUILD_DIR }} &&
             swift package --allow-writing-to-directory ${{ env.BUILD_DIR }}
               generate-documentation --target ${{ env.BUILD_TARGET }} --disable-indexing --transform-for-static-hosting
               --hosting-base-path DiscordKit --output-path ${{ env.BUILD_DIR }}

      ##########################
      ## Upload generated pages
      ##########################
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ${{ env.BUILD_DIR }}

  deploy:
    needs: generate

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v2
